<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="src\BaseGame\BaseGame.cpp" />
    <ClCompile Include="src\BoundingBox\BoundingBox.cpp" />
    <ClCompile Include="src\BSPManager\BSPManager.cpp" />
    <ClCompile Include="src\CameraController\CameraController.cpp" />
    <ClCompile Include="src\Camera\Camera.cpp" />
    <ClCompile Include="src\Component\Component.cpp" />
    <ClCompile Include="src\Cube\Cube.cpp" />
    <ClCompile Include="src\Entity2D\Entity2D.cpp" />
    <ClCompile Include="src\Entity3D\Entity3D.cpp" />
    <ClCompile Include="src\Entity\Entity.cpp" />
    <ClCompile Include="src\FlyFunctions\Color\Color.cpp" />
    <ClCompile Include="src\FlyFunctions\Commons\Commons.cpp" />
    <ClCompile Include="src\FlyFunctions\Debugger\Debugger.cpp" />
    <ClCompile Include="src\Frustum\Frustum.cpp" />
    <ClCompile Include="src\glad.c" />
    <ClCompile Include="src\Input\Input.cpp" />
    <ClCompile Include="src\Lights\DirectionalLight\DirectionalLight.cpp" />
    <ClCompile Include="src\Lights\Light.cpp" />
    <ClCompile Include="src\Lights\PointLight\PointLight.cpp" />
    <ClCompile Include="src\Lights\SpotLight\SpotLight.cpp" />
    <ClCompile Include="src\Line\Line.cpp" />
    <ClCompile Include="src\main.cpp" />
    <ClCompile Include="src\MaterialManager\MaterialManager.cpp" />
    <ClCompile Include="src\MaterialSpecification\MaterialSpecification.cpp" />
    <ClCompile Include="src\Material\Material.cpp" />
    <ClCompile Include="src\Mesh\Mesh.cpp" />
    <ClCompile Include="src\ModelImporter\ModelImporter.cpp" />
    <ClCompile Include="src\Model\Model.cpp" />
    <ClCompile Include="src\Plane\Plane.cpp" />
    <ClCompile Include="src\Rectangle\Rectangle.cpp" />
    <ClCompile Include="src\Renderer\Renderer.cpp" />
    <ClCompile Include="src\SceneGraph\SceneGraph.cpp" />
    <ClCompile Include="src\SceneNode\SceneNode.cpp" />
    <ClCompile Include="src\Scene\Scene.cpp" />
    <ClCompile Include="src\ShaderManager\ShaderManager.cpp" />
    <ClCompile Include="src\Shader\Shader.cpp" />
    <ClCompile Include="src\Shape\Shape.cpp" />
    <ClCompile Include="src\Sprite\Sprite.cpp" />
    <ClCompile Include="src\TextureImporter\TextureImporter.cpp" />
    <ClCompile Include="src\TextureManager\TextureManager.cpp" />
    <ClCompile Include="src\Texture\Texture.cpp" />
    <ClCompile Include="src\TinyXML2\tinyxml2.cpp" />
    <ClCompile Include="src\Transform\Transform.cpp" />
    <ClCompile Include="src\Triangle\Triangle.cpp" />
    <ClCompile Include="src\Vertex\Vertex.cpp" />
    <ClCompile Include="src\Window\Window.cpp" />
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="src\BaseGame\BaseGame.h" />
    <ClInclude Include="src\BoundingBox\BoundingBox.h" />
    <ClInclude Include="src\BSPManager\BSPManager.h" />
    <ClInclude Include="src\Buffers\Buffers.h" />
    <ClInclude Include="src\CameraController\CameraController.h" />
    <ClInclude Include="src\Camera\Camera.h" />
    <ClInclude Include="src\Component\Component.h" />
    <ClInclude Include="src\Cube\Cube.h" />
    <ClInclude Include="src\EngineMode\EngineMode.h" />
    <ClInclude Include="src\Entity2D\Entity2D.h" />
    <ClInclude Include="src\Entity3D\Entity3D.h" />
    <ClInclude Include="src\Entity\Entity.h" />
    <ClInclude Include="src\Exports\Exports.h" />
    <ClInclude Include="src\FlyFunctions\ColorCode\ColorCode.h" />
    <ClInclude Include="src\FlyFunctions\Color\Color.h" />
    <ClInclude Include="src\FlyFunctions\Commons\Commons.h" />
    <ClInclude Include="src\FlyFunctions\Debugger\Debugger.h" />
    <ClInclude Include="src\FlyFunctions\KeyCode\KeyCode.h" />
    <ClInclude Include="src\Frustum\Frustum.h" />
    <ClInclude Include="src\Input\Input.h" />
    <ClInclude Include="src\Lights\DirectionalLight\DirectionalLight.h" />
    <ClInclude Include="src\Lights\Light.h" />
    <ClInclude Include="src\Lights\LightType.h" />
    <ClInclude Include="src\Lights\PointLight\PointLight.h" />
    <ClInclude Include="src\Lights\SpotLight\SpotLight.h" />
    <ClInclude Include="src\Line\Line.h" />
    <ClInclude Include="src\MaterialManager\MaterialManager.h" />
    <ClInclude Include="src\MaterialSpecification\MaterialSpecification.h" />
    <ClInclude Include="src\Material\Material.h" />
    <ClInclude Include="src\Material\MaterialList.h" />
    <ClInclude Include="src\Mesh\Mesh.h" />
    <ClInclude Include="src\ModelImporter\ModelImporter.h" />
    <ClInclude Include="src\Model\Model.h" />
    <ClInclude Include="src\Plane\Plane.h" />
    <ClInclude Include="src\Rectangle\Rectangle.h" />
    <ClInclude Include="src\Renderer\Renderer.h" />
    <ClInclude Include="src\SceneGraph\SceneGraph.h" />
    <ClInclude Include="src\SceneNode\SceneNode.h" />
    <ClInclude Include="src\Scene\Scene.h" />
    <ClInclude Include="src\ShaderManager\ShaderManager.h" />
    <ClInclude Include="src\Shader\Shader.h" />
    <ClInclude Include="src\Shape\Shape.h" />
    <ClInclude Include="src\Sprite\Sprite.h" />
    <ClInclude Include="src\TextureImporter\TextureImporter.h" />
    <ClInclude Include="src\TextureManager\TextureManager.h" />
    <ClInclude Include="src\Texture\Texture.h" />
    <ClInclude Include="src\TinyXML2\tinyxml2.h" />
    <ClInclude Include="src\Transform\Transform.h" />
    <ClInclude Include="src\Triangle\Triangle.h" />
    <ClInclude Include="src\VertexAttribute\VertexAttribute.h" />
    <ClInclude Include="src\Vertex\Vertex.h" />
    <ClInclude Include="src\Window\Window.h" />
  </ItemGroup>
  <ItemGroup>
    <None Include="res\Shaders\defaultBasicFragment.shader" />
    <None Include="res\Shaders\defaultBasicVertex.shader" />
    <None Include="res\Shaders\defaultModelFragment.shader" />
    <None Include="res\Shaders\defaultModelVertex.shader" />
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <VCProjectVersion>16.0</VCProjectVersion>
    <Keyword>Win32Proj</Keyword>
    <ProjectGuid>{ab43767a-449f-45e6-a642-78c1e7e1abf6}</ProjectGuid>
    <RootNamespace>FlyEngine</RootNamespace>
    <WindowsTargetPlatformVersion>10.0</WindowsTargetPlatformVersion>
    <ProjectName>Engine</ProjectName>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v143</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v143</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v143</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v143</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="Shared">
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <LinkIncremental>true</LinkIncremental>
    <TargetName>FlyEngine</TargetName>
    <OutDir>$(ProjectDir)bin\$(Configuration)\</OutDir>
    <IntDir>$(ProjectDir)obj\$(Configuration)\</IntDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <LinkIncremental>false</LinkIncremental>
    <TargetName>Fly Engine</TargetName>
    <OutDir>$(ProjectDir)bin\$(Configuration)\</OutDir>
    <IntDir>$(ProjectDir)obj\$(Configuration)\</IntDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <LinkIncremental>true</LinkIncremental>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <LinkIncremental>false</LinkIncremental>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>WIN32;_DEBUG;_CONSOLE;FLY_EXPORTS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <AdditionalIncludeDirectories>$(ProjectDir);$(ProjectDir)src;$(ProjectDir)Dependencies\GLM;$(ProjectDir)Dependencies\STB;$(ProjectDir)Dependencies\GLAD\include;$(ProjectDir)Dependencies\GLFW\include;$(ProjectDir)Dependencies\GLEW\include;$(ProjectDir)Dependencies\ASSIMP\include</AdditionalIncludeDirectories>
      <LanguageStandard>stdcpp20</LanguageStandard>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <AdditionalLibraryDirectories>$(ProjectDir)Dependencies\GLEW\library;$(ProjectDir)Dependencies\GLFW\library;$(ProjectDir)Dependencies\ASSIMP\library;$(ProjectDir);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>glfw3dll.lib;glew32.lib;opengl32.lib;assimp-vc142-mtd.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <EntryPointSymbol>
      </EntryPointSymbol>
    </Link>
    <PostBuildEvent>
      <Command>IF EXIST "$(ProjectDir)bin\Debug\FlyEngine.dll" ( XCOPY "$(ProjectDir)bin\Debug\FlyEngine.dll" "$(SolutionDir)Testing\bin\Debug\" /h /y /s) ELSE ( ECHO DLL DOES NOT EXIST )
IF EXIST "$(ProjectDir)bin\Debug\FlyEngine.lib" ( XCOPY "$(ProjectDir)bin\Debug\FlyEngine.lib" "$(SolutionDir)Testing\bin\Debug\" /h /y /s) ELSE ( ECHO LIB DOES NOT EXIST )
IF NOT EXIST "$(ProjectDir)bin\Debug\glfw3.dll" (XCOPY "$(ProjectDir)Dependencies\GLFW\dll\glfw3.dll" "$(ProjectDir)bin\Debug\" /e /h /y /s) ELSE (ECHO GLFW DLL ALREADY LOADED)
IF NOT EXIST "$(ProjectDir)bin\Debug\glew32.dll" (XCOPY "$(ProjectDir)Dependencies\GLEW\dll\glew32.dll" "$(ProjectDir)bin\Debug\" /e /h /y /s) ELSE (ECHO GLFW DLL ALREADY LOADED)
IF NOT EXIST "$(ProjectDir)bin\Debug\assimp-vc142-mtd.dll" (XCOPY "$(ProjectDir)Dependencies\ASSIMP\dll\assimp-vc142-mtd.dll" "$(ProjectDir)bin\Debug\" /e /h /y /s) ELSE (ECHO GLFW DLL ALREADY LOADED)
</Command>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>
      </Command>
    </PreBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>WIN32;NDEBUG;_CONSOLE;FLY_EXPORTS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <AdditionalIncludeDirectories>$(ProjectDir);$(ProjectDir)src;$(ProjectDir)Dependencies\GLM;$(ProjectDir)Dependencies\STB;$(ProjectDir)Dependencies\GLAD\include;$(ProjectDir)Dependencies\GLFW\include;$(ProjectDir)Dependencies\GLEW\include;$(ProjectDir)Dependencies\ASSIMP\include</AdditionalIncludeDirectories>
      <LanguageStandard>stdcpp20</LanguageStandard>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <AdditionalLibraryDirectories>$(ProjectDir)Dependencies\GLEW\library;$(ProjectDir)Dependencies\GLFW\library;$(ProjectDir)Dependencies\ASSIMP\library;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>glfw3dll.lib;glew32.lib;opengl32.lib;assimp-vc142-mtd.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <EntryPointSymbol>
      </EntryPointSymbol>
    </Link>
    <PostBuildEvent>
      <Command>IF EXIST "$(ProjectDir)bin\Debug\FlyEngine.dll" ( XCOPY "$(ProjectDir)bin\Debug\FlyEngine.dll" "$(SolutionDir)Testing\bin\Debug\" /h /y /s) ELSE ( ECHO DLL DOES NOT EXIST )
IF EXIST "$(ProjectDir)bin\Debug\FlyEngine.lib" ( XCOPY "$(ProjectDir)bin\Debug\FlyEngine.lib" "$(SolutionDir)Testing\bin\Debug\" /h /y /s) ELSE ( ECHO LIB DOES NOT EXIST )
IF NOT EXIST "$(ProjectDir)bin\Debug\glfw3.dll" (XCOPY "$(ProjectDir)Dependencies\GLFW\dll\glfw3.dll" "$(ProjectDir)bin\Debug\" /e /h /y /s) ELSE (ECHO GLFW DLL ALREADY LOADED)
IF NOT EXIST "$(ProjectDir)bin\Debug\glew32.dll" (XCOPY "$(ProjectDir)Dependencies\GLEW\dll\glew32.dll" "$(ProjectDir)bin\Debug\" /e /h /y /s) ELSE (ECHO GLFW DLL ALREADY LOADED)
IF NOT EXIST "$(ProjectDir)bin\Debug\assimp-vc142-mtd.dll" (XCOPY "$(ProjectDir)Dependencies\ASSIMP\dll\assimp-vc142-mtd.dll" "$(ProjectDir)bin\Debug\" /e /h /y /s) ELSE (ECHO GLFW DLL ALREADY LOADED)

IF EXIST "$(SolutionDir)Testing\res\Shaders" (RMDIR /S /Q "$(SolutionDir)Testing\res\Shaders"
 ECHO Carpeta shaders eliminada en Testing.
)

IF NOT EXIST "$(SolutionDir)Testing\res\Shaders" (MKDIR "$(SolutionDir)Testing\res\Shaders")

IF EXIST "$(SolutionDir)Testing\res\Shaders" (
XCOPY "$(SolutionDir)FlyEngine\res\Shaders" "$(SolutionDir)Testing\res\Shaders" /e /h /y /s
) ELSE ( ECHO SHADERS FOLDER-TESTING DOES NOT EXIST )

IF EXIST "$(SolutionDir)Testing\res\Textures" (RMDIR /S /Q "$(SolutionDir)Testing\res\Textures"
 ECHO Carpeta shaders eliminada en Testing.
)

IF NOT EXIST "$(SolutionDir)Testing\res\Textures" (MKDIR "$(SolutionDir)Testing\res\Textures")

IF EXIST "$(SolutionDir)Testing\res\Textures" (
XCOPY "$(SolutionDir)FlyEngine\res\Textures" "$(SolutionDir)Testing\res\Textures" /e /h /y /s
) ELSE ( ECHO SHADERS FOLDER-TESTING DOES NOT EXIST )

IF NOT EXIST "$(SolutionDir)Testing\Dependencies" (MKDIR "$(SolutionDir)Testing\Dependencies")
XCOPY "$(ProjectDir)Dependencies" "$(SolutionDir)Testing\Dependencies" /e /h /y /s
IF NOT EXIST "$(SolutionDir)Testing\Dependencies\FLY" (MKDIR "$(SolutionDir)Testing\Dependencies\FLY")

IF EXIST "$(ProjectDir)bin\Debug\FlyEngine.dll" (XCOPY "$(ProjectDir)bin\Debug\FlyEngine.dll" "$(SolutionDir)Testing\Dependencies\FLY\" /h /y /s) ELSE ( ECHO DLL DOES NOT EXIST )

IF EXIST "$(ProjectDir)bin\Debug\FlyEngine.lib" (XCOPY "$(ProjectDir)bin\Debug\FlyEngine.lib" "$(SolutionDir)Testing\Dependencies\FLY\" /h /y /s) ELSE ( ECHO LIB DOES NOT EXIST )

IF EXIST "$(ProjectDir)src\FlyEngine.h" (XCOPY "$(ProjectDir)src\FlyEngine.h" "$(SolutionDir)Testing\Dependencies\FLY\" /h /y /s) ELSE ( ECHO H DOES NOT EXIST )</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <LanguageStandard>stdcpp20</LanguageStandard>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
    </Link>
    <PostBuildEvent>
      <Command>IF EXIST "$(ProjectDir)bin\Debug\FlyEngine.dll" ( XCOPY "$(ProjectDir)bin\Debug\FlyEngine.dll" "$(SolutionDir)Testing\bin\Debug\" /h /y /s) ELSE ( ECHO DLL DOES NOT EXIST )
IF EXIST "$(ProjectDir)bin\Debug\FlyEngine.lib" ( XCOPY "$(ProjectDir)bin\Debug\FlyEngine.lib" "$(SolutionDir)Testing\bin\Debug\" /h /y /s) ELSE ( ECHO LIB DOES NOT EXIST )
IF NOT EXIST "$(ProjectDir)bin\Debug\glfw3.dll" (XCOPY "$(ProjectDir)Dependencies\GLFW\dll\glfw3.dll" "$(ProjectDir)bin\Debug\" /e /h /y /s) ELSE (ECHO GLFW DLL ALREADY LOADED)
IF NOT EXIST "$(ProjectDir)bin\Debug\glew32.dll" (XCOPY "$(ProjectDir)Dependencies\GLEW\dll\glew32.dll" "$(ProjectDir)bin\Debug\" /e /h /y /s) ELSE (ECHO GLFW DLL ALREADY LOADED)
IF NOT EXIST "$(ProjectDir)bin\Debug\assimp-vc142-mtd.dll" (XCOPY "$(ProjectDir)Dependencies\ASSIMP\dll\assimp-vc142-mtd.dll" "$(ProjectDir)bin\Debug\" /e /h /y /s) ELSE (ECHO GLFW DLL ALREADY LOADED)
</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <LanguageStandard>stdcpp20</LanguageStandard>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <GenerateDebugInformation>true</GenerateDebugInformation>
    </Link>
    <PostBuildEvent>
      <Command>IF EXIST "$(ProjectDir)bin\Debug\FlyEngine.dll" ( XCOPY "$(ProjectDir)bin\Debug\FlyEngine.dll" "$(SolutionDir)Testing\bin\Debug\" /h /y /s) ELSE ( ECHO DLL DOES NOT EXIST )
IF EXIST "$(ProjectDir)bin\Debug\FlyEngine.lib" ( XCOPY "$(ProjectDir)bin\Debug\FlyEngine.lib" "$(SolutionDir)Testing\bin\Debug\" /h /y /s) ELSE ( ECHO LIB DOES NOT EXIST )
IF NOT EXIST "$(ProjectDir)bin\Debug\glfw3.dll" (XCOPY "$(ProjectDir)Dependencies\GLFW\dll\glfw3.dll" "$(ProjectDir)bin\Debug\" /e /h /y /s) ELSE (ECHO GLFW DLL ALREADY LOADED)
IF NOT EXIST "$(ProjectDir)bin\Debug\glew32.dll" (XCOPY "$(ProjectDir)Dependencies\GLEW\dll\glew32.dll" "$(ProjectDir)bin\Debug\" /e /h /y /s) ELSE (ECHO GLFW DLL ALREADY LOADED)
IF NOT EXIST "$(ProjectDir)bin\Debug\assimp-vc142-mtd.dll" (XCOPY "$(ProjectDir)Dependencies\ASSIMP\dll\assimp-vc142-mtd.dll" "$(ProjectDir)bin\Debug\" /e /h /y /s) ELSE (ECHO GLFW DLL ALREADY LOADED)

IF EXIST "$(SolutionDir)Testing\res\Shaders" (RMDIR /S /Q "$(SolutionDir)Testing\res\Shaders"
 ECHO Carpeta shaders eliminada en Testing.
)

IF NOT EXIST "$(SolutionDir)Testing\res\Shaders" (MKDIR "$(SolutionDir)Testing\res\Shaders")

IF EXIST "$(SolutionDir)Testing\res\Shaders" (
XCOPY "$(SolutionDir)FlyEngine\res\Shaders" "$(SolutionDir)Testing\res\Shaders" /e /h /y /s
) ELSE ( ECHO SHADERS FOLDER-TESTING DOES NOT EXIST )

IF EXIST "$(SolutionDir)Testing\res\Textures" (RMDIR /S /Q "$(SolutionDir)Testing\res\Textures"
 ECHO Carpeta shaders eliminada en Testing.
)

IF NOT EXIST "$(SolutionDir)Testing\res\Textures" (MKDIR "$(SolutionDir)Testing\res\Textures")

IF EXIST "$(SolutionDir)Testing\res\Textures" (
XCOPY "$(SolutionDir)FlyEngine\res\Textures" "$(SolutionDir)Testing\res\Textures" /e /h /y /s
) ELSE ( ECHO SHADERS FOLDER-TESTING DOES NOT EXIST )

IF NOT EXIST "$(SolutionDir)Testing\Dependencies" (MKDIR "$(SolutionDir)Testing\Dependencies")
XCOPY "$(ProjectDir)Dependencies" "$(SolutionDir)Testing\Dependencies" /e /h /y /s
IF NOT EXIST "$(SolutionDir)Testing\Dependencies\FLY" (MKDIR "$(SolutionDir)Testing\Dependencies\FLY")

IF EXIST "$(ProjectDir)bin\Debug\FlyEngine.dll" (XCOPY "$(ProjectDir)bin\Debug\FlyEngine.dll" "$(SolutionDir)Testing\Dependencies\FLY\" /h /y /s) ELSE ( ECHO DLL DOES NOT EXIST )

IF EXIST "$(ProjectDir)bin\Debug\FlyEngine.lib" (XCOPY "$(ProjectDir)bin\Debug\FlyEngine.lib" "$(SolutionDir)Testing\Dependencies\FLY\" /h /y /s) ELSE ( ECHO LIB DOES NOT EXIST )

IF EXIST "$(ProjectDir)src\FlyEngine.h" (XCOPY "$(ProjectDir)src\FlyEngine.h" "$(SolutionDir)Testing\Dependencies\FLY\" /h /y /s) ELSE ( ECHO H DOES NOT EXIST )</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>